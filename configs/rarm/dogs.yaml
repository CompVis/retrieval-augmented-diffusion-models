model:
  base_learning_rate: 5.0e-4 # TODO: run with --scale_lr false
  target: rdm.models.autoregression.transformer.LatentImageRETRO
  params:
    mask_token: 16384
    sos_token: 16385
    p_mask_max: 0.0
    nn_key: "nn_embeddings"
    nn_memory: nn_memory/oi_imagenet-dogs.p

    nn_reshaper_cfg:
      target: rdm.modules.encoders.nn_encoders.CLIPEmbeddingReshaper

    nn_encoder_cfg:
      target: rdm.modules.encoders.nn_encoders.IdentityEncoder

    transformer_config:
      target: rdm.modules.attention.RetrievalPatchTransformer
      params:
        in_channels: 16386
        n_heads: 12
        d_head: 64
        depth: 18
        context_dim: 512
        positional_encodings: True
        sequence_length: 256
        out_channels: 16384
        cross_attend: True
        causal: True
        continuous: False

    first_stage_config:
      target: ldm.models.autoencoder.VQModel
      params:
        ckpt_path: models/first_stage_models/vq-f16/model.ckpt
        embed_dim: 8
        n_embed: 16384
        ddconfig:
          double_z: false
          z_channels: 8
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 1
          - 2
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions:
          - 16
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    retrieval_cfg:
      target: rdm.data.retrieval_dataset.dsetbuilder.DatasetBuilder
      params:
        patch_size: 256
        #    n_patches: 10
        batch_size: 100
        k: 20
        max_pool_size: 2e7
        save: True
        num_workers: 24
        img_size: [1200,1200]
        chunk_size: 2e6
        gpu: True
        saved_embeddings: database/openimages
        load_patch_dataset: True

        retriever_config:
          target: rdm.modules.retrievers.ClipImageRetriever
          params:
            model: ViT-B/32

        # the source for the retrieval dataset
        data:
          target: rdm.data.openimages.FullOpenImagesTrain
          params: {}

    cond_stage_config: "__is_unconditional__"


data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 50
    wrap: False
    num_workers: 5

    sampler_config:
      target: rdm.data.base.SubsetSampler
      params:
        label_key: 'class_label'
        label_range: [151,280] # dogs
    train:
      target: rdm.data.base.QueryDataset
      params:
        k: 4
        nns: <compute nearest neighbor, see README>
        load_patches: True
        n_patches_per_side: 1
        dset_config:
          target: rdm.data.imagenet.ImageNetTrain
          params:
            config:
              size: 256

    validation:
      target: rdm.data.base.QueryDataset
      params:
        k: 4
        nns: <compute nearest neighbor, see README>
        load_patches: True
        n_patches_per_side: 1
        dset_config:
          target: rdm.data.imagenet.ImageNetValidation
          params:
            config:
              size: 256

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        disabled: False
        batch_frequency: 5000
        max_images: 8
        increase_log_steps: False
        log_on_batch_idx: True
        log_first_step: True
        log_images_kwargs:
          plot_cond_stage: False
          sample: True
          half_sample: True
          p_sample: False
          memsize: 1.0
          patch_plotter_cfg:
            target: rdm.models.autoregression.transformer.ImageNeighborPlotter
            params:
              nn_key: "nn_patches"
    epochs_checkpoint:
      params:
        every_n_epochs: 2


  trainer:
    benchmark: True
    num_sanity_val_steps: 0
    accumulate_grad_batches: 2
